swagger: "2.0"
info:
  title: GamersNoteAPI
  version: 1.0.0
consumes:
  - application/json
produces:
  - application/json
basePath: "/api/v1"
schemes:
  - http

paths:
  ############################################################
  ### healthcheck ############################################
  ############################################################
  /status:
    get:
      tags:
        - healthcheck
      operationId: healthcheck
      responses:
        200:
          description: healthy
  ############################################################
  ### user ###################################################
  ############################################################
  /users:
    post:
      tags:
        - user
      operationId: postUser
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - password
              - username
            properties:
              email:
                $ref: "#/definitions/email"
              password:
                $ref: "#/definitions/password"
              username:
                $ref: "#/definitions/username"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/user"
        409:
          description: Duplicated
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/{username}:
    parameters:
      - type: string
        name: username
        in: path
        required: true
    get:
      tags:
        - user
      operationId: getUser
      responses:
        200:
          description: gamersnote_idを指定してユーザーを取得
          schema:
            $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /users/me:
    get:
      tags:
        - user
      operationId: getMe
      responses:
        200:
          description: get me
          schema:
            $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    put:
      tags:
        - user
      operationId: putUser
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/user"
      responses:
        200:
          description: Updated
          schema:
            $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
        - user
      operationId: deleteUser
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/me/password:
    put:
      tags:
        - user
      operationId: putPassword
      parameters:
        - name: body
          in: body
          required: true
          schema:
            required:
              - password
            type: object
            properties:
              password:
                $ref: "#/definitions/password"
              code:
                type: string
      responses:
        200:
          description: Updated
          schema:
            $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/me/verified:
    patch:
      tags:
        - user
      operationId: patchUserVerified
      parameters:
        - name: body
          in: body
          required: true
          schema:
            required:
              - code
              - username
            type: object
            properties:
              code:
                type: string
              username:
                type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/me/email/verified:
    patch:
      tags:
        - user
      operationId: patchUserEmailVerified
      parameters:
        - name: body
          in: body
          required: true
          schema:
            required:
              - code
              - uid
            type: object
            properties:
              code:
                type: string
              uid:
                type: string
      responses:
        200:
          description: Success
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/me/signined:
    patch:
      tags:
        - user
      operationId: patchUserSignined
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                $ref: "#/definitions/email"
              password:
                $ref: "#/definitions/password"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/me/signouted:
    patch:
      tags:
        - user
      operationId: patchUserSignouted
      responses:
        200:
          description: Success
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/me/password/reset:
    patch:
      tags:
        - user
      operationId: patchUserPasswordReset
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
            properties:
              email:
                $ref: "#/definitions/email"
      responses:
        200:
          description: Success
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  
  ############################################################
  ### article ################################################
  ############################################################
  /articles:
    get:
      tags:
        - article
      operationId: getArticles
      parameters:
        - type: string
          name: since
          in: query
        - type: string
          name: keyword
          in: query
      responses:
        200:
          description: Get articles
          schema:
            type: array
            items:
              $ref: "#/definitions/article"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    post:
      tags:
        - article
      operationId: postArticle
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/article"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/article"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /articles/{article_id}:
    parameters:
      - type: string
        name: article_id
        in: path
        required: true
    get:
      tags:
        - article
      operationId: getArticle
      responses:
        200:
          description: Get article
          schema:
            $ref: "#/definitions/article"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    put:
      tags:
        - article
      operationId: putArticle
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/article"
      responses:
        200:
          description: Updated
          schema:
            $ref: "#/definitions/article"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
        - article
      operationId: deleteArticle
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/{gamersnote_id}/articles:
    get:
      tags:
        - article
      parameters:
        - type: string
          name: gamersnote_id
          in: path
          required: true
      operationId: getTheUsersArticles
      responses:
        200:
          description: get articles by user
          schema:
            type: array
            items:
              $ref: "#/definitions/article"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/me/follows/articles:
    get:
      tags:
        - article
      operationId: getFollowsArticles
      parameters:
        - name: since
          in: query
          type: string
      responses:
        200:
          description: get follows articles
          schema:
            type: array
            items:
              $ref: "#/definitions/article"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  ############################################################
  ### image ##################################################
  ############################################################
  /users/me/images:
    post:
      tags:
        - image
      operationId: uploadImage
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: image
          type: file
      responses:
        201:
          description: Created
          schema:
            required:
              - url
            type: object
            properties:
              url:
                type: string
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  
  
  
  ############################################################
  ### comment ################################################
  ############################################################
  /articles/{article_id}/comments:
    parameters:
      - type: string
        name: article_id
        in: path
        required: true
    get:
      tags:
        - comment
      operationId: getComments
      responses:
        200:
          description: Successed
          schema:
            type: array
            items:
              $ref: "#/definitions/comment"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    post:
      tags:
        - comment
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/comment"
      operationId: postComment
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/article"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /articles/{article_id}/comments/{comment_id}:
    parameters:
      - type: string
        name: article_id
        in: path
        required: true
      - type: string
        name: comment_id
        in: path
        required: true
    put:
      tags:
        - comment
      operationId: putComment
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/comment"
      responses:
        200:
          description: Updated
          schema:
            $ref: "#/definitions/comment"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
        - comment
      operationId: deleteComment
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  ############################################################
  ### follow #################################################
  ############################################################
  /users/me/follows:
    get:
      tags:
        - follow
      operationId: getFollows
      responses:
        200:
          description: get follows
          schema:
            type: array
            items:
              $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/me/follows/{user_id}:
    put:
      tags:
        - follow
      operationId: putFollow
      parameters:
        - type: string
          name: user_id
          in: path
          required: true
      responses:
        200:
          description: Successed

  ############################################################
  ### notification ###########################################
  ############################################################
  /users/me/notifications:
    get:
      tags:
        - notification
      operationId: getNotifications
      responses:
        200:
          description: get notifications
          schema:
            type: array
            items:
              $ref: "#/definitions/notification"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/me/notifications/{notification_id}/read:
    parameters:
      - type: string
        name: notification_id
        in: path
        required: true
    put:
      tags:
        - notification
      operationId: putNotificationRead
      responses:
        200:
          description: Successed
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  ############################################################
  ### stock ##################################################
  ############################################################
  /users/me/stocks:
    get:
      tags:
        - stock
      operationId: getStockedArticles
      responses:
        200:
          description: get stocks
          schema:
            type: array
            items:
              $ref: "#/definitions/article"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/me/stocks/{article_id}:
    parameters:
      - type: string
        name: article_id
        in: path
        required: true
    put:
      tags:
        - stock
      operationId: putStock
      responses:
        200:
          description: Successed
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
        - stock
      operationId: deleteStock
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  ############################################################
  ### like ###################################################
  ############################################################
  /users/me/likes:
    get:
      tags:
        - like
      operationId: getLikedArticles
      responses:
        200:
          description: get liked articles
          schema:
            type: array
            items:
              $ref: "#/definitions/article"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/me/likes/{article_id}:
    parameters:
      - type: string
        name: article_id
        in: path
        required: true
    put:
      tags:
        - like
      operationId: putLike
      responses:
        200:
          description: Successed
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
        - like
      operationId: deleteLike
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/error"



  
definitions:
  base_id:
    type: string
    readOnly: true
  username:
    type: string
    pattern: "[A-Za-z0-9\\_]{4,12}"
  email:
    type: string
    pattern: "[A-Za-z0-9\\-\\.\\_]+@[A-Za-z0-9\\-\\._]+\\.[A-Za-z]+"
  password:
    type: string
    pattern: "[A-Za-z0-9\\_]{6,20}"
  base_date:
    type: string
    format: date
    readOnly: true
  img_url:
    type: string
  profile_message:
    type: string
    minLength: 0
    maxLength: 200
  article_title:
    type: string
    minLength: 1
    maxLength: 50
  base_html:
    type: string
  base_count:
    type: integer
    readOnly: true
    
  comments:
    readOnly: true
    type: array
    items:
      $ref: "#/definitions/comment"

  user:
    type: object
    required:
      - username
      - email
    properties:
      user_id:
        $ref: "#/definitions/base_id"
      username:
        $ref: "#/definitions/username"
      email:
        $ref: "#/definitions/email"
      avatar_url:
        $ref: "#/definitions/img_url"
      message:
        $ref: "#/definitions/profile_message"
      registered_at:
        $ref: "#/definitions/base_date"
  article:
    type: object
    required:
      - thumbnail_url
      - title
      - body
    properties:
      article_id:
        $ref: "#/definitions/base_id"
      author:
        readOnly: true
        allOf:
          - $ref: '#/definitions/user'
      thumbnail_url:
        $ref: "#/definitions/img_url"
      title:
        $ref: "#/definitions/article_title"
      body:
        $ref: "#/definitions/base_html"
      like_count:
        $ref: "#/definitions/base_count"
      comments:
        $ref: "#/definitions/comments"
      created_at:
        $ref: "#/definitions/base_date"
      updated_at:
        $ref: "#/definitions/base_date"
  notification:
    type: object
    properties:
      notification_id:
        $ref: "#/definitions/base_id"
      sender:
        $ref: "#/definitions/user"
      category:
        type: string
        readOnly: true
      body:
        type: string
        readOnly: true
      is_read:
        type: boolean
        readOnly: true
      created_at:
        type: string
        format: date
        readOnly: true
  comment:
    type: object
    required:
      - body
    properties:
      comment_id:
        $ref: "#/definitions/base_id"
      replies:
        readOnly: true
        type: array
        items:
          $ref: "#/definitions/comment"
      author:
        readOnly: true
        allOf:
          - $ref: "#/definitions/user"
      body:
        type: string
      created_at:
        type: string
        format: date
        readOnly: true
  error:
    type: object
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
