// Code generated by go-swagger; DO NOT EDIT.

package comment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gamersnote.com/v1/models"
)

// PostCommentCreatedCode is the HTTP code returned for type PostCommentCreated
const PostCommentCreatedCode int = 201

/*PostCommentCreated Created

swagger:response postCommentCreated
*/
type PostCommentCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Comment `json:"body,omitempty"`
}

// NewPostCommentCreated creates PostCommentCreated with default headers values
func NewPostCommentCreated() *PostCommentCreated {

	return &PostCommentCreated{}
}

// WithPayload adds the payload to the post comment created response
func (o *PostCommentCreated) WithPayload(payload *models.Comment) *PostCommentCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post comment created response
func (o *PostCommentCreated) SetPayload(payload *models.Comment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCommentCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostCommentDefault error

swagger:response postCommentDefault
*/
type PostCommentDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostCommentDefault creates PostCommentDefault with default headers values
func NewPostCommentDefault(code int) *PostCommentDefault {
	if code <= 0 {
		code = 500
	}

	return &PostCommentDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post comment default response
func (o *PostCommentDefault) WithStatusCode(code int) *PostCommentDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post comment default response
func (o *PostCommentDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post comment default response
func (o *PostCommentDefault) WithPayload(payload *models.Error) *PostCommentDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post comment default response
func (o *PostCommentDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCommentDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
