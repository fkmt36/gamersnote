// Code generated by go-swagger; DO NOT EDIT.

package comment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gamersnote.com/v1/models"
)

// GetCommentsOKCode is the HTTP code returned for type GetCommentsOK
const GetCommentsOKCode int = 200

/*GetCommentsOK Successed

swagger:response getCommentsOK
*/
type GetCommentsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Comment `json:"body,omitempty"`
}

// NewGetCommentsOK creates GetCommentsOK with default headers values
func NewGetCommentsOK() *GetCommentsOK {

	return &GetCommentsOK{}
}

// WithPayload adds the payload to the get comments o k response
func (o *GetCommentsOK) WithPayload(payload []*models.Comment) *GetCommentsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get comments o k response
func (o *GetCommentsOK) SetPayload(payload []*models.Comment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCommentsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Comment, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetCommentsDefault error

swagger:response getCommentsDefault
*/
type GetCommentsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCommentsDefault creates GetCommentsDefault with default headers values
func NewGetCommentsDefault(code int) *GetCommentsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetCommentsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get comments default response
func (o *GetCommentsDefault) WithStatusCode(code int) *GetCommentsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get comments default response
func (o *GetCommentsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get comments default response
func (o *GetCommentsDefault) WithPayload(payload *models.Error) *GetCommentsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get comments default response
func (o *GetCommentsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCommentsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
