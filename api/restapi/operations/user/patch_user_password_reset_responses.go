// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gamersnote.com/v1/models"
)

// PatchUserPasswordResetOKCode is the HTTP code returned for type PatchUserPasswordResetOK
const PatchUserPasswordResetOKCode int = 200

/*PatchUserPasswordResetOK Success

swagger:response patchUserPasswordResetOK
*/
type PatchUserPasswordResetOK struct {
}

// NewPatchUserPasswordResetOK creates PatchUserPasswordResetOK with default headers values
func NewPatchUserPasswordResetOK() *PatchUserPasswordResetOK {

	return &PatchUserPasswordResetOK{}
}

// WriteResponse to the client
func (o *PatchUserPasswordResetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

/*PatchUserPasswordResetDefault error

swagger:response patchUserPasswordResetDefault
*/
type PatchUserPasswordResetDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchUserPasswordResetDefault creates PatchUserPasswordResetDefault with default headers values
func NewPatchUserPasswordResetDefault(code int) *PatchUserPasswordResetDefault {
	if code <= 0 {
		code = 500
	}

	return &PatchUserPasswordResetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the patch user password reset default response
func (o *PatchUserPasswordResetDefault) WithStatusCode(code int) *PatchUserPasswordResetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the patch user password reset default response
func (o *PatchUserPasswordResetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the patch user password reset default response
func (o *PatchUserPasswordResetDefault) WithPayload(payload *models.Error) *PatchUserPasswordResetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch user password reset default response
func (o *PatchUserPasswordResetDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchUserPasswordResetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
