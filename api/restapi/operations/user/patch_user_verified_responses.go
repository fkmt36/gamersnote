// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gamersnote.com/v1/models"
)

// PatchUserVerifiedOKCode is the HTTP code returned for type PatchUserVerifiedOK
const PatchUserVerifiedOKCode int = 200

/*PatchUserVerifiedOK Success

swagger:response patchUserVerifiedOK
*/
type PatchUserVerifiedOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewPatchUserVerifiedOK creates PatchUserVerifiedOK with default headers values
func NewPatchUserVerifiedOK() *PatchUserVerifiedOK {

	return &PatchUserVerifiedOK{}
}

// WithPayload adds the payload to the patch user verified o k response
func (o *PatchUserVerifiedOK) WithPayload(payload *models.User) *PatchUserVerifiedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch user verified o k response
func (o *PatchUserVerifiedOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchUserVerifiedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PatchUserVerifiedDefault error

swagger:response patchUserVerifiedDefault
*/
type PatchUserVerifiedDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchUserVerifiedDefault creates PatchUserVerifiedDefault with default headers values
func NewPatchUserVerifiedDefault(code int) *PatchUserVerifiedDefault {
	if code <= 0 {
		code = 500
	}

	return &PatchUserVerifiedDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the patch user verified default response
func (o *PatchUserVerifiedDefault) WithStatusCode(code int) *PatchUserVerifiedDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the patch user verified default response
func (o *PatchUserVerifiedDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the patch user verified default response
func (o *PatchUserVerifiedDefault) WithPayload(payload *models.Error) *PatchUserVerifiedDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch user verified default response
func (o *PatchUserVerifiedDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchUserVerifiedDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
