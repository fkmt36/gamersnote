// Code generated by go-swagger; DO NOT EDIT.

package article

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gamersnote.com/v1/models"
)

// GetArticlesOKCode is the HTTP code returned for type GetArticlesOK
const GetArticlesOKCode int = 200

/*GetArticlesOK Get articles

swagger:response getArticlesOK
*/
type GetArticlesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Article `json:"body,omitempty"`
}

// NewGetArticlesOK creates GetArticlesOK with default headers values
func NewGetArticlesOK() *GetArticlesOK {

	return &GetArticlesOK{}
}

// WithPayload adds the payload to the get articles o k response
func (o *GetArticlesOK) WithPayload(payload []*models.Article) *GetArticlesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get articles o k response
func (o *GetArticlesOK) SetPayload(payload []*models.Article) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetArticlesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Article, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetArticlesDefault error

swagger:response getArticlesDefault
*/
type GetArticlesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetArticlesDefault creates GetArticlesDefault with default headers values
func NewGetArticlesDefault(code int) *GetArticlesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetArticlesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get articles default response
func (o *GetArticlesDefault) WithStatusCode(code int) *GetArticlesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get articles default response
func (o *GetArticlesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get articles default response
func (o *GetArticlesDefault) WithPayload(payload *models.Error) *GetArticlesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get articles default response
func (o *GetArticlesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetArticlesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
