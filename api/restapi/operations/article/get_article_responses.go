// Code generated by go-swagger; DO NOT EDIT.

package article

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gamersnote.com/v1/models"
)

// GetArticleOKCode is the HTTP code returned for type GetArticleOK
const GetArticleOKCode int = 200

/*GetArticleOK Get article

swagger:response getArticleOK
*/
type GetArticleOK struct {

	/*
	  In: Body
	*/
	Payload *models.Article `json:"body,omitempty"`
}

// NewGetArticleOK creates GetArticleOK with default headers values
func NewGetArticleOK() *GetArticleOK {

	return &GetArticleOK{}
}

// WithPayload adds the payload to the get article o k response
func (o *GetArticleOK) WithPayload(payload *models.Article) *GetArticleOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get article o k response
func (o *GetArticleOK) SetPayload(payload *models.Article) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetArticleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetArticleDefault error

swagger:response getArticleDefault
*/
type GetArticleDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetArticleDefault creates GetArticleDefault with default headers values
func NewGetArticleDefault(code int) *GetArticleDefault {
	if code <= 0 {
		code = 500
	}

	return &GetArticleDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get article default response
func (o *GetArticleDefault) WithStatusCode(code int) *GetArticleDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get article default response
func (o *GetArticleDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get article default response
func (o *GetArticleDefault) WithPayload(payload *models.Error) *GetArticleDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get article default response
func (o *GetArticleDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetArticleDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
