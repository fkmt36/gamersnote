// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gamersnote.com/v1/models"
)

// UploadImageCreatedCode is the HTTP code returned for type UploadImageCreated
const UploadImageCreatedCode int = 201

/*UploadImageCreated Created

swagger:response uploadImageCreated
*/
type UploadImageCreated struct {

	/*
	  In: Body
	*/
	Payload *UploadImageCreatedBody `json:"body,omitempty"`
}

// NewUploadImageCreated creates UploadImageCreated with default headers values
func NewUploadImageCreated() *UploadImageCreated {

	return &UploadImageCreated{}
}

// WithPayload adds the payload to the upload image created response
func (o *UploadImageCreated) WithPayload(payload *UploadImageCreatedBody) *UploadImageCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload image created response
func (o *UploadImageCreated) SetPayload(payload *UploadImageCreatedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadImageCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UploadImageDefault error

swagger:response uploadImageDefault
*/
type UploadImageDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadImageDefault creates UploadImageDefault with default headers values
func NewUploadImageDefault(code int) *UploadImageDefault {
	if code <= 0 {
		code = 500
	}

	return &UploadImageDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the upload image default response
func (o *UploadImageDefault) WithStatusCode(code int) *UploadImageDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the upload image default response
func (o *UploadImageDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the upload image default response
func (o *UploadImageDefault) WithPayload(payload *models.Error) *UploadImageDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload image default response
func (o *UploadImageDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadImageDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
