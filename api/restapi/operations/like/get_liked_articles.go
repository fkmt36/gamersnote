// Code generated by go-swagger; DO NOT EDIT.

package like

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetLikedArticlesHandlerFunc turns a function with the right signature into a get liked articles handler
type GetLikedArticlesHandlerFunc func(GetLikedArticlesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetLikedArticlesHandlerFunc) Handle(params GetLikedArticlesParams) middleware.Responder {
	return fn(params)
}

// GetLikedArticlesHandler interface for that can handle valid get liked articles params
type GetLikedArticlesHandler interface {
	Handle(GetLikedArticlesParams) middleware.Responder
}

// NewGetLikedArticles creates a new http.Handler for the get liked articles operation
func NewGetLikedArticles(ctx *middleware.Context, handler GetLikedArticlesHandler) *GetLikedArticles {
	return &GetLikedArticles{Context: ctx, Handler: handler}
}

/*GetLikedArticles swagger:route GET /users/me/likes like getLikedArticles

GetLikedArticles get liked articles API

*/
type GetLikedArticles struct {
	Context *middleware.Context
	Handler GetLikedArticlesHandler
}

func (o *GetLikedArticles) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetLikedArticlesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
