// Code generated by go-swagger; DO NOT EDIT.

package like

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PutLikeHandlerFunc turns a function with the right signature into a put like handler
type PutLikeHandlerFunc func(PutLikeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PutLikeHandlerFunc) Handle(params PutLikeParams) middleware.Responder {
	return fn(params)
}

// PutLikeHandler interface for that can handle valid put like params
type PutLikeHandler interface {
	Handle(PutLikeParams) middleware.Responder
}

// NewPutLike creates a new http.Handler for the put like operation
func NewPutLike(ctx *middleware.Context, handler PutLikeHandler) *PutLike {
	return &PutLike{Context: ctx, Handler: handler}
}

/*PutLike swagger:route PUT /users/me/likes/{article_id} like putLike

PutLike put like API

*/
type PutLike struct {
	Context *middleware.Context
	Handler PutLikeHandler
}

func (o *PutLike) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPutLikeParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
