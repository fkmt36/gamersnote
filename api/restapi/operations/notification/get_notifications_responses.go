// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gamersnote.com/v1/models"
)

// GetNotificationsOKCode is the HTTP code returned for type GetNotificationsOK
const GetNotificationsOKCode int = 200

/*GetNotificationsOK get notifications

swagger:response getNotificationsOK
*/
type GetNotificationsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Notification `json:"body,omitempty"`
}

// NewGetNotificationsOK creates GetNotificationsOK with default headers values
func NewGetNotificationsOK() *GetNotificationsOK {

	return &GetNotificationsOK{}
}

// WithPayload adds the payload to the get notifications o k response
func (o *GetNotificationsOK) WithPayload(payload []*models.Notification) *GetNotificationsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get notifications o k response
func (o *GetNotificationsOK) SetPayload(payload []*models.Notification) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNotificationsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Notification, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetNotificationsDefault error

swagger:response getNotificationsDefault
*/
type GetNotificationsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetNotificationsDefault creates GetNotificationsDefault with default headers values
func NewGetNotificationsDefault(code int) *GetNotificationsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetNotificationsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get notifications default response
func (o *GetNotificationsDefault) WithStatusCode(code int) *GetNotificationsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get notifications default response
func (o *GetNotificationsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get notifications default response
func (o *GetNotificationsDefault) WithPayload(payload *models.Error) *GetNotificationsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get notifications default response
func (o *GetNotificationsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNotificationsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
