// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gamersnote.com/v1/models"
)

// PutNotificationReadOKCode is the HTTP code returned for type PutNotificationReadOK
const PutNotificationReadOKCode int = 200

/*PutNotificationReadOK Successed

swagger:response putNotificationReadOK
*/
type PutNotificationReadOK struct {
}

// NewPutNotificationReadOK creates PutNotificationReadOK with default headers values
func NewPutNotificationReadOK() *PutNotificationReadOK {

	return &PutNotificationReadOK{}
}

// WriteResponse to the client
func (o *PutNotificationReadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

/*PutNotificationReadDefault error

swagger:response putNotificationReadDefault
*/
type PutNotificationReadDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutNotificationReadDefault creates PutNotificationReadDefault with default headers values
func NewPutNotificationReadDefault(code int) *PutNotificationReadDefault {
	if code <= 0 {
		code = 500
	}

	return &PutNotificationReadDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put notification read default response
func (o *PutNotificationReadDefault) WithStatusCode(code int) *PutNotificationReadDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put notification read default response
func (o *PutNotificationReadDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put notification read default response
func (o *PutNotificationReadDefault) WithPayload(payload *models.Error) *PutNotificationReadDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put notification read default response
func (o *PutNotificationReadDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutNotificationReadDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
