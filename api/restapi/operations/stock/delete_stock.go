// Code generated by go-swagger; DO NOT EDIT.

package stock

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteStockHandlerFunc turns a function with the right signature into a delete stock handler
type DeleteStockHandlerFunc func(DeleteStockParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteStockHandlerFunc) Handle(params DeleteStockParams) middleware.Responder {
	return fn(params)
}

// DeleteStockHandler interface for that can handle valid delete stock params
type DeleteStockHandler interface {
	Handle(DeleteStockParams) middleware.Responder
}

// NewDeleteStock creates a new http.Handler for the delete stock operation
func NewDeleteStock(ctx *middleware.Context, handler DeleteStockHandler) *DeleteStock {
	return &DeleteStock{Context: ctx, Handler: handler}
}

/*DeleteStock swagger:route DELETE /users/me/stocks/{article_id} stock deleteStock

DeleteStock delete stock API

*/
type DeleteStock struct {
	Context *middleware.Context
	Handler DeleteStockHandler
}

func (o *DeleteStock) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteStockParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
